# Title: Assessing the ecological relationships of the orange-
# striped green sea anemone, Diadumene lineata, as a non-indigenous 
# species in British Columbia, Canada
# Author: Miranda Nicole Andersen
# Institution: University of British Columbia
# Contact: andersenm@sun.ac.za
# Repository: https://github.com/miranda-andersen/
#             D.lineata_ecology_BC.git
# Version: 1.0
# License: General Public License v3.0 (see LICENSE file for details)
# Date: 2024-01-11
# -------------------------------------------------------------------
# Description:
# This script performs the data analyses and visualizations included
# in the manuscript of the same title. 
# 
# Usage:
# - Required inputs: .csv and .txt files included in DATA folder
# 
# Dependencies:
# - R version or higher
# - Packages: read, tidyr, plyr, dplyr, MuMIn, visreg, car, lmerTest, 
#   RVAideMemoire, muktcomp, siPlot, grid, lubridate, DHARMa, 
#   effects, DMwR, lme4, numDeriv, RCurl, ggplot2, reshape2,
#   devtools, nlme, tidyverse, performance, see, qqplotr, eemeans, 
#   siar(now MixSIAR)
# -------------------------------------------------------------------

##set theme
theme_dumene <- theme_classic() +
  theme(axis.title.y = element_text(size = 18, face= "bold"),
        axis.title.x = element_text(size = 16, face= "bold"),
        axis.text = element_text(size = 12, colour = "black"),
        axis.text.x = element_text(margin = margin(t = 12, unit = "pt")),
        axis.text.y = element_text(margin = margin(r = 12)),
        legend.title = element_text(size = 16),legend.text = element_text( size = 14)) 

####Supplementary Field Survey Analyses
##note that anemone abundance field data is provided in the supplement of Andersen & Harely, 2025 
  and was analyzed using negative binomial regressions. code is available upon request

##effect of June 2021 heatdome on anemone abundance 

heat <- read.csv("post_heatwave_abundance.csv")

heat_nb_model <- glm.nb(value ~ condition, data = heat)
summary(heat_nb_model)

abundance <- heat %>%
  ggplot(aes(reorder(site, desc(value)), value, fill = factor(condition, levels=c('old', 'pre', 'post')))) + 
    geom_bar(position="dodge", alpha=.75, stat="identity") +
    xlab("Site") + ylab("Discovery rate (# individuals/hr)") +
    scale_fill_discrete(name="Condition", breaks=c("old", "pre", "post"), labels=c("2016","2021 pre-heatwave", "2021 post-heatwave")) +
  theme_dumene
abundance + theme(legend.position = "right")+ 
  scale_fill_manual(name="Condition", breaks=c("old", "pre", "post"), labels=c("2016","2021 pre-heatwave", "2021 post-heatwave"), values = c("#F9DCC3", "#F9BA3B","darkorange2"))

##vertical distribution of anemones at two sites

dunbar <- read.csv("dunbar_distribution.csv") #dunbar st site
brockton <- read.csv("brockton_distribution.csv") #brockton point site

dunbar %>%
  group_by(Height) %>%
  summarise(se = sd(Abundance)/sqrt(length(Abundance)), Mean = mean(Abundance)) 

brockton %>%
  group_by(Height) %>%
  summarise(se = sd(Abundance)/sqrt(length(Abundance)), Mean = mean(Abundance)) 

ggplot(dunbar, aes(x=Height, y=Mean)) + 
  geom_pointrange(aes(ymin=Mean-se, ymax=Mean+se)) +
  xlab("Shore height (m)") + ylab("Individuals per min") +
  theme_dumene

ggplot(brockton, aes(x=Height, y=Mean)) + 
  geom_pointrange(aes(ymin=Mean-se, ymax=Mean+se)) +
  xlab("Shore height (m)") + ylab("Individuals per min") +
  theme_dumene

####Feeding Trials

##effect of prey size on ingestion

facilitated <- read.csv("facilitated_trials.csv") # referred to as "active" trials in data
nonfacilitated <- read.csv("nonfacilitated_trials.csv") #"passive" in data

facilitated_lm <- lm(data= facilitated, ingestion ~ size)
summary(facilitated_lm)

nonfacilitated_lm <- lm(data= nonfacilitated, ingestion ~ size)
summary(nonfacilitated_lm)

##trial ingestion visualized as categorical degrees of digestion

digestion_facilitated <- read.csv("long_active_new.csv")
digestion_nonfaciliated <- read.csv("long_passive_new.csv")

digestion_facilitated[is.na(digestion_facilitated)] = 0

dig_fac_graph <- digestion_facilitated %>%
  ggplot(aes(x= reorder(prey,-group),value, fill = factor(digestion, levels=c('complete', 'partial', 'none'))))+
  geom_bar(stat="identity", alpha=.6, width=.6)+
  coord_flip() +
  xlab("Prey item") + ylab("Percent ingested") +
  scale_fill_discrete(name="Digestion", breaks=c("complete", "partial", "none"), labels=c("Complete","Partial","None")) +
  theme_dumene %>% theme(legend.position = "none")+ 
  scale_fill_manual(name="Digestion", breaks=c("complete", "partial", "none"), labels=c("Complete","Partial","None"), values = c("darkorange2", "#F9BA3B", "#F9DCC3"))

digestion_nonfaciliated[is.na(digestion_nonfaciliated)] = 0

dig_nonfac_graph <- digestion_nonfaciliated %>%
  ggplot(aes(reorder(prey, -group), value, fill = factor(digestion, levels=c('complete', 'partial', 'none'))))+
  geom_bar(stat="identity", alpha=.6, width=.6)+
  coord_flip() +
  xlab("Prey item") + ylab("Percent ingested") +
  scale_fill_discrete(name="Digestion", breaks=c("complete", "partial", "none"), labels=c("Complete","Partial","None")) +
  scale_y_continuous(limits=c(0, 100))+
  theme_dumene %>% theme(legend.position = "right")+ 
  scale_fill_manual(name="Digestion", breaks=c("complete", "partial", "none"), labels=c("Complete","Partial","None"), values = c("darkorange2", "#F9BA3B", "#F9DCC3"))

##response plots from facilitated trials

active_response <- read.csv("active_break_down.csv")

response_graph <- active_response %>%
  ggplot(aes(reorder(prey,desc(order)), percent, fill = factor(response, levels=c('ingest', 'grab/reject', 'reject'))))+
  geom_bar(stat="identity", alpha=.6, width=.6, position = position_fill(reverse = TRUE))+
  coord_flip() +
  xlab("Prey item") + ylab("Relative frequency of response") +
  scale_fill_discrete(name="Response", breaks=c('ingest', 'grab/reject', 'reject'), labels=c("Ingestion","Grab-rejection","Rejection")) +
  theme_dumene

response_graph + theme(legend.position = "right")+ 
  scale_fill_manual(name="Response", breaks=c('ingest', 'grab/reject', 'reject'), labels=c("Ingestion","Grab-rejection","Rejection"), values = c("orange", "cornflowerblue", "darkblue"))

##mean ingestion time from facilitated trials

i_time <- read.csv("ingestion_time.csv")

ingestion <-i_time %>%
  group_by(prey, order) %>%
  summarise(se = sd(time)/sqrt(length(time)), time = mean(time)) 
 
ggplot(i_time, aes(x= reorder(prey,time),time)) +
   geom_col(data = ingestion, fill = "orange", alpha=.6, width=.6) +
   geom_jitter(width = 0.05, height = 1,color = "black", alpha=.8) + 
  geom_errorbar( aes( ymin=time-se, ymax=time+se), 
                 data = ingestion, width = 0.2) +
  coord_flip() +
  xlab("Prey item") + ylab("Mean ingestion time (min)") +
  theme_dumene

####Stable Isotope Analysis

##linear regression to test if lipid correction is needed

ea_irms_raw <- read.csv('EA_IRMS_results.csv')

model <- lm(thirteenC ~ CN, data = ea_irms_raw)
lm <- plot(ea_irms_raw$CN, ea_irms_raw$thirteenC)
abline(model, col = "blue")

summary(model) #F = 8.493, df = 36, p = 0.006; correction applied based on Smyntek et al. 2007

##plot siar model using lipid-corrected data and trophic discrimination factors

data <- read.table('consumer.txt',header=TRUE)
sources <- read.table('grouped_sources.txt',header=TRUE)
tdf <- read.table('grouped_tdf.txt',header=TRUE)

#siarmodel using tdfs from Zabala et al. 2013
siarmodel <- siarmcmcdirichletv4(data,sources,tdf,concdep=0,500000,50000)

siarplotdata(siarmodel, iso=c(2,1), aes(legend = "right"))
siarmatrixplot(siarmodel)
siarhistograms(siarmodel)
siarproportionbygroupplot(siarmodel)

####Anemone-predator feeding trials and abundance surveys
##note that this data is available in the supplementary material of Andersen & Harley, 2025 
  code is available upon request

####Mussel Facilitation Experiments

##January 2021 initial attachment
jan_6hr <- read.csv("cp_jan_6hr.csv")

jan_6hr$Treatment <- as.factor(jan_6hr$Treatment)
jan_6hr$Time <- as.Time(jan_6hr$Time)

jan_6hr_4graph <- jan_6hr %>%
  group_by(Treatment, Time) %>%
  mutate(Time = as.POSIXct(hms::parse_hm(Time))) %>%
  summarise(se = sd(Proportion)/sqrt(length(Proportion)), Anemones = mean(Proportion)) 

a_jan <- ggplot(jan_6hr_4graph, aes(Time, Anemones)) + 
  geom_point(aes(color = Treatment), position = position_dodge(200)) +
  geom_line(aes(group = Treatment, color=Treatment), position = position_dodge(200), size = 0.8)+
  labs(x="Hours", y="Mean number of individuals") + 
  scale_color_manual(name="Treatment", labels=c("Mussels","Control"), values = c("darkblue", "darkorange2")) +
  geom_errorbar(aes(ymin = Anemones - se, ymax = Anemones + se, color = Treatment), position = position_dodge(200), width = 1000, size = 0.8) +
  scale_x_datetime(date_labels = c("6", "0", "1", "2", "3", "4", "5"), date_breaks = "1 hour") + scale_y_continuous(limits = c(0, 100)) +
  expand_limits(y=c(0, 4))+
  theme_dumene 

##October 2020 2 month attachment

oct_2mo <- read.csv("cp_oct_2mo.csv")

oct_2month$Treatment <- as.factor(oct_2month$Treatment)
oct_2month$Date <- as.Date(oct_2month$Date) 

oct_2month_4graph <- oct_2month %>%
  group_by(Treatment, Date) %>%
  summarise(se = sd(Proportion)/sqrt(length(Proportion)), Anemones = mean(Proportion))

b_oct <- ggplot(oct_2month_4graph, aes(Date, Anemones)) + 
  geom_line(aes(group = Treatment, color=Treatment), position = position_dodge(0.3), size = 0.8)+
  geom_point(aes(color = Treatment), position = position_dodge(0.3)) +
  labs(x="Weeks", y="Mean number of individuals") + 
  scale_x_date(date_labels = "%b %d")+
  scale_color_manual(name="Treatment", breaks=c("mussels", "control"), labels=c("Mussels","Control"), values = c("darkblue", "darkorange2")) +
  geom_errorbar(aes(ymin = Anemones - se, ymax = Anemones + se, color = Treatment),position = position_dodge(0.3), width = 5, size = 0.8) + scale_y_continuous(limits = c(0, 100)) +
  expand_limits(y=c(0, 4))+
  theme_dumene

##May 2021 initial attachment

may_6hr <- read.csv("cp_may_6hr.csv")

may_6hr$Treatment <- as.factor(may_6hr$Treatment)
may_6hr$Time <- as.Time(may_6hr$Time)

may_6hr_4graph <- may_6hr %>%
  group_by(Treatment, Time) %>%
  mutate(Time = as.POSIXct(hms::parse_hm(Time))) %>%
  summarise(se = sd(Proportion)/sqrt(length(Proportion)), Anemones = mean(Proportion)) 

c_may <- ggplot(may_6hr_4graph, aes(Time, Anemones)) + 
  geom_point(aes(color = Treatment), position = position_dodge(200)) +
  geom_line(aes(group = Treatment, color=Treatment), position = position_dodge(200), size = 0.8)+
  labs(x="Hours", y="Mean number of individuals") + 
  scale_color_manual(name="Treatment", breaks= c("Mussel", "Control"), labels=c("Mussels","Control"), values = c("darkblue", "darkorange2")) +
  geom_errorbar(aes(ymin = Anemones - se, ymax = Anemones + se, color = Treatment), position = position_dodge(200), width = 1000, size = 0.8) +
  scale_x_datetime(date_labels = c("6", "0", "1", "2", "3", "4", "5"), date_breaks = "1 hour") + scale_y_continuous(limits = c(0, 100)) +
  expand_limits(y=c(0, 6))+
  theme_dumene 

##May 2021 2 month attachment
may_2mo <- read.csv("cp_may_2mo.csv")

may_2mo$Treatment <- as.factor(may_2mo$Treatment)
may_2mo$Date <- as.Date(may_2mo$Date) 

may_2mo_4graph <- may_2mo %>%
  group_by(Treatment, Date) %>%
  summarise(se = sd(Proportion)/sqrt(length(Proportion)), Anemones = mean(Proportion))

d_may <- ggplot(may_2mo_4graph, aes(Date, Anemones)) + 
  geom_line(aes(group = Treatment, color=Treatment), position = position_dodge(0.3), size = 0.8)+
  geom_point(aes(color = Treatment), position = position_dodge(0.3)) +
  labs(x="Weeks", y="Mean number of individuals") + 
  scale_x_date(date_labels = "%b %d") +
  scale_color_manual(name="Treatment", breaks=c("Mussels", "Control"), labels=c("Mussels","Control"), values = c("darkblue", "darkorange2")) +
  geom_errorbar(aes(ymin = Anemones - se, ymax = Anemones + se, color = Treatment),position = position_dodge(0.3), width = 5, size = 0.8) + scale_y_continuous(limits = c(0, 100)) +
  expand_limits(y=c(0, 6))+
  theme_dumene

##linear mixed effects model for 6-hour data

mussel1 <-read.csv("cp_6hr.csv")
str(mussel1)

mussel1$Treatment<-revalue(mussel1$Treatment, c("control"=1))
mussel1$Treatment<-revalue(mussel1$Treatment, c("mussels"=2))

mussel1$Season<-revalue(mussel1$Season, c("winter"=1))
mussel1$Season<-revalue(mussel1$Season, c("summer"=2))

mussel1$Time <- gsub(":", "", mussel1$Time)

mussel1$Treatment <- as.factor(mussel1$Treatment)
mussel1$Anemones <- as.numeric(mussel1$Anemones)
mussel1$Time <- as.numeric(mussel1$Time)
mussel1$ID <- as.factor(mussel1$ID)
mussel1$Season <- as.factor(mussel1$Season)

view(mussel1)

sixhours <-lmer(Anemones~Treatment+Time+Season+Treatment:Time+Season:Treatment+(1|ID), mussel1)

summary(sixhours)
visreg(sixhours)
tab_model(sixhours)

check_model(eightweeks)

##linear mixed effects model for 2-month data

mussel2 <-read.csv("cp_8weeks.csv")
str(mussel2)

mussel2$Treatment<-revalue(mussel2$Treatment, c("control"=1))
mussel2$Treatment<-revalue(mussel2$Treatment, c("mussels"=2))

mussel2$Season<-revalue(mussel2$Season, c("winter"=1))
mussel2$Season<-revalue(mussel2$Season, c("summer"=2))

mussel2$Treatment <- as.factor(mussel2$Treatment)
mussel2$Anemones <- as.numeric(mussel2$Anemones)
mussel2$Change <- as.numeric(mussel2$Change)
mussel2$Time <- as.numeric(mussel2$Time)
mussel2$Tidepool <- as.factor(mussel2$Tidepool)
mussel2$Season <- as.factor(mussel2$Season)

eightweeks <-lmer(Change~Treatment+Time+Season+Treatment:Time+Treatment:Season+(1|Tidepool), mussel2)

summary(eightweeks)
visreg(eightweeks)
tab_model(eightweeks)

check_model(eightweeks)

####Anemone Density Manipulation Experiment

biodiv <- read.csv("nat_biodiv.csv")
view(biodiv)
str(biodiv)

##visualize data

nat_biodiv_fig <- read.csv("nat_biodiv_fig.csv")
view(nat_biodiv_fig)

nat_biodiv_fig$Treatment <- as.factor(nat_biodiv_fig$Treatment)
head(nat_biodiv_fig)

nat_biodiv_fig$Date <- as.Date(nat_biodiv_fig$Date) 
head(nat_biodiv_fig)

nat_biodiv <- nat_biodiv_fig %>%
  drop_na() %>% 
  group_by(Treatment, Date)%>%
  summarise(se = sd(Richness)/sqrt(length(Richness)), Richness = mean(Richness))

biodiv_fig <- ggplot(nat_biodiv, aes(Date, Richness)) +
  geom_line(aes(linetype = Treatment, color = Treatment), position = position_dodge(3), size = 0.7)+
  geom_point(aes(color = Treatment), position = position_dodge(3), size = 2) +
  labs(x="Date", y="Mean richness") + 
  geom_errorbar(aes(ymin = Richness-se, ymax = Richness+se, color = Treatment),position = position_dodge(3), width = 10, size = 0.5)+
  scale_linetype_manual(name="Treatment", breaks = c("Elevated","Control", "Removed"), labels=c("Elevated","Control", "Removed"), values = c(6,1,2)) +
  scale_color_manual(name="Treatment", breaks = c("Elevated","Control", "Removed"), labels=c("Elevated","Control", "Removed"), values = c("red", "orange", "blue")) +
  scale_x_date(date_breaks = "2 month" , date_labels = "%b %Y")+
  theme_dumene

biodiv_fig + annotate("rect", xmin = as.Date("2020-10-15", "%Y-%m-%d"), 
  xmax = as.Date("2021-01-05",  "%Y-%m-%d"), ymin = -0.35, ymax = 0.55, alpha = .1, fill = "black") +
  annotate("rect", xmin = as.Date("2021-06-25", "%Y-%m-%d"), 
  xmax = as.Date("2021-06-30",  "%Y-%m-%d"), ymin = -0.35, ymax = 0.55, alpha = 0.5, fill = "firebrick") +
  theme(axis.text.x = element_text(angle = 30, hjust = 1, vjust = 1.25))

##preparing for linear mixed effects modelling

biodiv$Treatment<-revalue(biodiv$Treatment, c("Control"=1))
biodiv$Treatment<-revalue(biodiv$Treatment, c("Elevated"=2))
biodiv$Treatment<-revalue(biodiv$Treatment, c("Removed"=3))

biodiv$Census <- as.factor(biodiv$Census)
biodiv$Site <- as.factor(biodiv$Site)
biodiv$Treatment <- as.factor(biodiv$Treatment)
biodiv$Tidepool <- as.factor(biodiv$Tidepool)
biodiv$Sample_time <- as.factor(biodiv$Sample_time)

biodiv$Light_initial <- as.numeric(biodiv$Light_initial)
biodiv$Salinity <- as.numeric(biodiv$Salinity)

biodiv$Date<-as.Date(biodiv$Date)

str(biodiv)

ready_biodiv <- data.frame(site=(biodiv$Site),
                        diversity=scale(biodiv$H_change),
                        salinity=scale(biodiv$Salinity),
                        time=(biodiv$Sample_time), 
                        height=scale(biodiv$Height),
                        volume=scale(biodiv$Volume),
                        date=scale(biodiv$Date), 
                        census=(biodiv$Census),
                        initial=scale(biodiv$H_inital),
                        id=(biodiv$Tidepool),
                        treatment=(biodiv$Treatment),
                        light=scale(biodiv$Light_initial))

str(ready_biodiv)

##linear mixed model (gaussian distribution) 
#interested in the effect of treatment (3 levels of anemone density:control,elevated,zero/removed) on change in diversity over time 
#note that multiple models were tried but this one was the best fit

biodiv_m1<-lmer(diversity~date*treatment+height+volume+salinity+initial+time+light+(1|id), ready_biodiv)

summary(biodiv_m1)
visreg(biodiv_m1)
tab_model(biodiv_m1)

system.time(sr1 <- simulateResiduals(biodiv_m1))
plot(sr1)

check_model(biodiv_m1)

#removing insignificant fixed factors (i.e. light, volume, salinity, height)

biodiv_m2<-lmer(diversity~treatment*date+initial+time+salinity+(1|id), ready_biodiv)

#run a posthoc

biodiv_emm <- emmeans(biodiv_m2, ~ treatment*date)
biodiv_emm
contrast(biodiv_emm)
pairs(biodiv_emm)

summary(biodiv_m2)
visreg(biodiv_m2)
tab_model(biodiv_m2,
          col.order = c("est","ci","p"),
                        pred.labels = c("Intercept", "Elevated treatment", "Removed treatment", "Census date",
                                        "Initial diversity", "Census time of day","Salinity",
                                        "Elevated * Census date", "Removed * Census date"),
                        dv.labels = c("Change in diversity from initial"),
                        string.ci = "Conf. Int (95%)",
                        string.p = "P-Value")

system.time(sr2 <- simulateResiduals(biodiv_m2))
plot(sr2)

check_model(biodiv_m2)

